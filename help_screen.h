#ifndef HELP_SCREEN_H
#define HELP_SCREEN_H

#include "context.h"
class help_screen : public state
{
private:
	std::shared_ptr<context>& m_context;
	sf::Text Helpfull_text;

public:
	////////////////////////////////////////////////////////////
	/// \brief constructor
	/// 
	/// context std::shared_ptr<context>& shared reference to game context
	/// 
	////////////////////////////////////////////////////////////
	help_screen(std::shared_ptr<context>& context);

	////////////////////////////////////////////////////////////
	/// \brief destructor
	/// 
	////////////////////////////////////////////////////////////
	~help_screen();

	// overrides of state pure virtuals 
	////////////////////////////////////////////////////////////
	/// \brief override of pure virtual state class function init()
	/// this initializes the class
	/// 
	////////////////////////////////////////////////////////////
	void init() override;

	////////////////////////////////////////////////////////////
	/// \brief override of pure virtual state class function pollevents()
	/// this takes input for the class
	/// 
	////////////////////////////////////////////////////////////
	void pollevents() override;

	////////////////////////////////////////////////////////////
	/// \brief override of pure virtual state class function update(float& dt)
	/// this takes deltatime as float for the class
	/// 
	////////////////////////////////////////////////////////////
	void update(float& deltatime) override;

	////////////////////////////////////////////////////////////
	/// \brief override of pure virtual state class function render()
	/// this renders the class on context's window
	/// 
	////////////////////////////////////////////////////////////
	void render() override;
};

////////////////////////////////////////////////////////////
/// 
/// \class help_screen
///
/// \brief class for the help screen
///
/// This class creates a help screen which shows the game instructions
/// it can be exited by pressing esc
///
////////////////////////////////////////////////////////////

#endif
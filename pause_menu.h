#ifndef PAUSE_MENU_H
#define PAUSE_MENU_H

#include "gen_menu.h"

class pause_menu :public gen_menu
{
private:
	////////////////////////////////////////////////////////////
	/// \brief timer for seeing that state doesnt get
	/// immediately unpaused
	///
	////////////////////////////////////////////////////////////
	sf::Clock min_timer;
	
public:
	////////////////////////////////////////////////////////////
	/// \brief constructor
	///
	/// \param context std::shared_ptr<context>& shared 
	/// reference to the active context
	///
	////////////////////////////////////////////////////////////
	pause_menu(std::shared_ptr<context>& context);

	////////////////////////////////////////////////////////////
	/// \brief destructor
	/// 
	////////////////////////////////////////////////////////////
	virtual ~pause_menu();

	////////////////////////////////////////////////////////////
	/// \brief override of pure virtual gen_menu class function variable_init()
	/// this initializes variables which change from menu to menu
	/// 
	////////////////////////////////////////////////////////////
	void variable_init() override;

	////////////////////////////////////////////////////////////
	/// \brief override of pure virtual gen_menu class function pollevents()
	/// this initializes the input processing and actions
	/// 
	////////////////////////////////////////////////////////////
	void pollevents() override;

};

////////////////////////////////////////////////////////////
/// 
/// \class pause_menu
///
/// \brief class for the pause screen
///
/// This class creates a pause menu with options of resuming
/// or exiting the game,this class is derived from gen_menu class
///
////////////////////////////////////////////////////////////
#endif